version: "3.9"

services:

  # Service annuaire
  discovery:
    image: consul:1.11
    container_name: consul
    ports:
      - "8500:8500"
    restart: always
    networks:
      - consul

  # Vault pour le stockage des secrets
  vault:
    image: vault:latest
    container_name: vault
    ports:
      - "8200:8200"
    restart: always
    networks:
      - consul
    command: server -dev -dev-root-token-id=${VAULT_TOKEN}

  # Service de configuration
  config-serveur:
    image: projet-hopital/config-serveur:latest
    container_name: config-serveur
    environment:
      JAVA_TOOL_OPTIONS:
        -DCONSUL_HOST=discovery -DCONSUL_PORT=8500
        -DVAULT_HOST=vault -DVAULT_PORT=8200 -DVAULT_TOKEN=${VAULT_TOKEN}
    ports:
      - "8888:8888"
    restart: always
    networks:
      - consul
    depends_on:
      - discovery

  # Service de messagerie
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always
    networks:
      - consul

  # Service api gateway
  api-gateway:
    image: projet-hopital/api-gateway:latest
    container_name: api-gateway
    environment:
      JAVA_TOOL_OPTIONS:
        -DCONSUL_HOST=discovery -DCONSUL_PORT=8500
    ports:
      - "8080:8080"
    restart: always
    networks:
      - consul
    depends_on:
      - discovery


####################################################################################
#                           SERVICE D'AUTHENTIFICATION
####################################################################################

  # Base de données Postgres
  db-postgres-auth:
    image: postgres:alpine
    container_name: bdd_auth
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bdd_auth
    ports:
      - "5433:5432"
    restart: always
    networks:
      - consul

  # Application Spring Boot
  service-auth:
    image: projet-hopital/service-authentification:latest
    container_name: service-auth
    environment:
      JAVA_TOOL_OPTIONS:
        -DCONSUL_HOST=discovery -DCONSUL_PORT=8500
        -DDB_HOST=db-postgres-auth -DDB_PORT=5432 -DDB_USER=postgres -DDB_PASSWORD=postgres -DDB_NAME=bdd_auth
        -DRABBITMQ_USERNAME=guest -DRABBITMQ_PASSWORD=guest -DRABBITMQ_HOST=rabbitmq -DRABBITMQ_PORT=5672
        -DVAULT_HOST=vault -DVAULT_PORT=8200 -DVAULT_TOKEN=${VAULT_TOKEN}
        -DCONFIG_SERVER_HOST=config-serveur -DCONFIG_SERVER_PORT=8888
    ports:
      - "8081:8081"
    restart: always
    networks:
      - consul
    depends_on:
      - discovery
      - db-postgres-auth
      - rabbitmq

####################################################################################
#                            SERVICE DE NOTIFICATION
####################################################################################

  # Base de données Postgres
  db-postgres-notif:
    image: postgres:alpine
    container_name: bdd_notif
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bdd_notif
    ports:
      - "5432:5432"
    restart: always
    networks:
      - consul

  # Application Spring Boot
  service-notif:
    image: projet-hopital/service-notification:latest
    container_name: service-notif
    environment:
      JAVA_TOOL_OPTIONS:
        -DCONSUL_HOST=discovery -DCONSUL_PORT=8500
        -DDB_HOST=db-postgres-notif -DDB_PORT=5432 -DDB_USER=postgres -DDB_PASSWORD=postgres -DDB_NAME=bdd_notif
        -DRABBITMQ_USERNAME=guest -DRABBITMQ_PASSWORD=guest -DRABBITMQ_HOST=rabbitmq -DRABBITMQ_PORT=15672
        -DVAULT_HOST=vault -DVAULT_PORT=8200 -DVAULT_TOKEN=${VAULT_TOKEN}
        -DCONFIG_SERVER_HOST=config-serveur -DCONFIG_SERVER_PORT=8888
    ports:
      - "8082:8082"
    restart: always
    networks:
      - consul
    depends_on:
      - discovery
      - db-postgres-notif
      - rabbitmq
      - service-auth


####################################################################################
#                  SERVICE DE GESTION DES PATIENTS ET PERSONNEL
####################################################################################

  # Base de données Mongo
  db-mongo-rdv-patients:
    image: mongo:latest
    container_name: bdd_rdv_patients
    ports:
      - "27018:27017"
    restart: always
    volumes:
      - ./initBDDRDVPatients.js:/docker-entrypoint-initdb.d/initBDDRDVPatients.js
    networks:
      - consul
    environment:
      - MONGO_INITDB_DATABASE=rdvpatients

  # Application Spring Boot
  service-rdv-patients:
    image: projet-hopital/service-gestion-rdv-patients-personnel:latest
    container_name: service-rdv-patients
    environment:
      JAVA_TOOL_OPTIONS:
        -DCONSUL_HOST=discovery -DCONSUL_PORT=8500
        -DDB_HOST=db-mongo-rdv-patients -DDB_PORT=27017 -DDB_USER=mongo -DDB_PASSWORD=mongo -DDB_NAME=rdvpatients
        -DRABBITMQ_USERNAME=guest -DRABBITMQ_PASSWORD=guest -DRABBITMQ_HOST=rabbitmq -DRABBITMQ_PORT=15672
        -DVAULT_HOST=vault -DVAULT_PORT=8200 -DVAULT_TOKEN=${VAULT_TOKEN}
        -DCONFIG_SERVER_HOST=config-serveur -DCONFIG_SERVER_PORT=8888
    ports:
      - "8083:8083"
    restart: always
    networks:
      - consul
    depends_on:
      - discovery
      - db-mongo-rdv-patients
      - rabbitmq
      - service-auth

###################################################################################
#                  SERVICE DE GESTION DES STOCKS ET FOURNISSEURS
###################################################################################

  # Base de données Mongo
  db-mongo-stockfournisseurs:
    image: mongo:latest
    container_name: bdd_stockfournisseurs
    volumes:
      - ./initBDDSTOCK.js:/docker-entrypoint-initdb.d/initBDDSTOCK.js
    ports:
      - "27017:27017"
    networks:
      - consul
    environment:
      - MONGO_INITDB_DATABASE=gestionStock

  # Application Spring Boot
  service-stockfournisseurs:
    image: projet-hopital/service-gestion-stock-fournisseurs:latest
    container_name: service-stockfournisseurs
    environment:
      JAVA_TOOL_OPTIONS:
        -DCONSUL_HOST=discovery -DCONSUL_PORT=8500
        -DDB_HOST=db-mongo-stockfournisseurs -DDB_PORT=27017 -DDB_USER=mongo -DDB_PASSWORD=mongo -DDB_NAME=gestionStock
        -DRABBITMQ_USERNAME=guest -DRABBITMQ_PASSWORD=guest -DRABBITMQ_HOST=rabbitmq -DRABBITMQ_PORT=15672
        -DVAULT_HOST=vault -DVAULT_PORT=8200 -DVAULT_TOKEN=${VAULT_TOKEN}
        -DCONFIG_SERVER_HOST=config-serveur -DCONFIG_SERVER_PORT=8888
    ports:
      - "8084:8084"
    restart: always
    networks:
      - consul
    depends_on:
      - discovery
      - rabbitmq
      - db-mongo-stockfournisseurs
      - service-auth


###################################################################################
#                            SERVICE DE FACTURATION
###################################################################################

  # Base de données Mongo
  db-mongo-comptable:
    image: mongo:latest
    container_name: bdd_compta
    ports:
      - "27019:27017"
    networks:
        - consul

  # Application .NET
  service-comptable:
    container_name: service-comptable
    image: service-comptable:1.0
    ports:
      - "8085:80"
    environment:
      - Consul__Host=discovery
      - Consul__Port=8500
      - ServeurDetails__Host=service-comptable
      - ServeurDetails__Port=80
      - RabbitMQ__Protocol=amqp
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Username=guest
      - RabbitMQ__Password=guest
      - RabbitMQ__Port=5672
    restart: on-failure
    networks:
      - consul
    depends_on:
      - discovery
      - db-mongo-comptable
      - rabbitmq
      - service-auth


networks:
  consul:
    driver: bridge
