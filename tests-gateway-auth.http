### Creation d'un compte medecin sans confirmation (compte validé directement)
POST http://localhost:8080/api/auth/inscription/sans-confirmation
Content-Type: application/json

{
  "email": "frederic@hopital-medecin.fr",
  "password": "fred"
}

> {%
    client.global.set("fred_token", response.headers.valueOf("Authorization"));
    client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });
%}


### Creation d'un compte medecin nouvelle version (avec confirmation)
POST http://localhost:8080/api/auth/inscription
Content-Type: application/json

{
  "email": "fred@hopital-medecin.fr",
  "password": "fred"
}

> {%
    client.global.set("token_confirm", response.headers.valueOf("Token-Confirmation"));
    client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });
%}

### confirmation du compte utilisateur
GET http://localhost:8080/api/auth/confirmation-compte?token={{token_confirm}}


### Connexion d'un compte medecin
POST http://localhost:8080/api/auth/connexion
Content-Type: application/json

{
  "email": "fred@hopital-medecin.fr",
  "password": "fred"
}

> {%
    client.global.set("fred_token", response.headers.valueOf("Authorization"));
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}


### Recuperation du compte medecin avec un token valide
GET http://localhost:8080/api/auth/utilisateurs/fred@hopital-medecin.fr
Authorization: {{fred_token}}

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Recuperation du compte medecin avec un token valide
GET http://localhost:8080/api/auth/utilisateurs
Authorization: Bearer invalide

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 401, "Response status is not 401");
    });
%}

### Création d'un compte patient
POST http://localhost:8080/api/auth/inscription
Content-Type: application/json

{
  "email": "yohan@univ-orleans.fr",
  "password": "pass"
}

> {%
    client.global.set("token_confirm_yohan", response.headers.valueOf("Token-Confirmation"));
    client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });
%}

### confirmation du compte utilisateur
GET http://localhost:8080/api/auth/confirmation-compte?token={{token_confirm_yohan}}

### Récupération d'un compte d'un autre => non autorisé
GET http://localhost:8080/api/auth/utilisateurs/yohan@univ-orleans.fr
Authorization: {{fred_token}}

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 403, "Response status is not 403");
    });
%}

### Recuperation de la liste des utilisateurs en tant que medecin
GET http://localhost:8080/api/auth/utilisateurs
Authorization: {{fred_token}}

### Recuperation de la liste des utilisateurs par role => les patients
GET http://localhost:8080/api/auth/utilisateurs/type?role=PATIENT
Authorization: {{fred_token}}

### Recuperation de la liste des utilisateurs par role => les medecins
GET http://localhost:8080/api/auth/utilisateurs/type?role=MEDECIN
Authorization: {{fred_token}}

### Connexion d'un compte patient valide
POST http://localhost:8080/api/auth/connexion
Content-Type: application/json

{
  "email": "yohan@univ-orleans.fr",
  "password": "pass"
}

> {%
    client.global.set("yoh_token", response.headers.valueOf("Authorization"));
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Recuperation du compte patient par son propriétaire avec un token valide
GET http://localhost:8080/api/auth/utilisateurs/yohan@univ-orleans.fr
Authorization: {{yoh_token}}

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}


### Modification du mot de passe d'un compte valide
PATCH http://localhost:8080/api/auth/utilisateurs/mot-de-passe
Authorization: {{fred_token}}
Content-Type: application/json

{
  "email": "fred@hopital-medecin.fr",
  "password": "newpass"
}

### Connexion d'un compte avec le nouveau mot de passe
POST http://localhost:8080/api/auth/connexion
Content-Type: application/json

{
  "email": "fred@hopital-medecin.fr",
  "password": "newpass"
}

> {%
    client.global.set("yoh_token", response.headers.valueOf("Authorization"));
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Suppression d'un compte medecin par son propriétaire
GET http://localhost:8080/api/auth/utilisateurs/fred@hopital-medecin.fr
Authorization: {{fred_token}}

### Suppression d'un compte medecin par son propriétaire
DELETE http://localhost:8080/api/auth/utilisateurs/fred@hopital-medecin.fr
Authorization: {{fred_token}}

### Creation d'un compte medecin
POST http://localhost:8080/api/auth/inscription
Content-Type: application/json

{
  "email": "fred2@hopital-medecin.fr",
  "password": "fred"
}
> {%
    client.global.set("token_confirm", response.headers.valueOf("Token-Confirmation"));
    client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });
%}

### confirmation du compte utilisateur
GET http://localhost:8080/api/auth/confirmation-compte?token={{token_confirm}}


### Connexion d'un compte admin
POST http://localhost:8080/api/auth/connexion
Content-Type: application/json

{
  "email": "admin@hopital.fr",
  "password": "admin"
}

> {%
    client.global.set("admin_token", response.headers.valueOf("Authorization"));
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

